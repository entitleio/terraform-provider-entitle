# Terraform Provider release workflow.
name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v*" (e.g. v0.1.0) is created.
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read   # default for the workflow

jobs:
  run-tests:
    uses: ./.github/workflows/test.yml
    secrets:
      ENTITLE_ACCESS_REQUEST_FORWARD_ID: ${{ secrets.ENTITLE_ACCESS_REQUEST_FORWARD_ID }}
      ENTITLE_ACCESS_REVIEW_FORWARD_ID: ${{ secrets.ENTITLE_ACCESS_REVIEW_FORWARD_ID }}
      ENTITLE_AGENT_TOKEN_ID: ${{ secrets.ENTITLE_AGENT_TOKEN_ID }}
      ENTITLE_API_KEY: ${{ secrets.ENTITLE_API_KEY }}
      ENTITLE_API_KEY2: ${{ secrets.ENTITLE_API_KEY2 }}
      ENTITLE_BUNDLE_ID: ${{ secrets.ENTITLE_BUNDLE_ID }}
      ENTITLE_DIRECTORY_GROUP_EMAIL: ${{ secrets.ENTITLE_DIRECTORY_GROUP_EMAIL }}
      ENTITLE_INTEGRATION_ID: ${{ secrets.ENTITLE_INTEGRATION_ID }}
      ENTITLE_MANUAL_INTEGRATION_ID: ${{ secrets.ENTITLE_MANUAL_INTEGRATION_ID }}
      ENTITLE_OWNER_EMAIL: ${{ secrets.ENTITLE_OWNER_EMAIL }}
      ENTITLE_OWNER_ID: ${{ secrets.ENTITLE_OWNER_ID }}
      ENTITLE_PERMISSION_ID: ${{ secrets.ENTITLE_PERMISSION_ID }}
      ENTITLE_POLICY_ID: ${{ secrets.ENTITLE_POLICY_ID }}
      ENTITLE_RESOURCE_ID: ${{ secrets.ENTITLE_RESOURCE_ID }}
      ENTITLE_ROLE_ID: ${{ secrets.ENTITLE_ROLE_ID }}
      ENTITLE_USER1_ID: ${{ secrets.ENTITLE_USER1_ID }}
      ENTITLE_USER2_ID: ${{ secrets.ENTITLE_USER2_ID }}
      ENTITLE_WORKFLOW_ID: ${{ secrets.ENTITLE_WORKFLOW_ID }}
      GITLAB_ACCESS_TOKEN: ${{ secrets.GITLAB_ACCESS_TOKEN }}
  goreleaser:
    # Releases need permissions to read and write the repository contents.
    # GitHub considers creating releases and uploading assets as writing contents.
    permissions:
      contents: write
    needs:
      - run-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@72b6676b71ab476b77e676928516f6982eef7a41 # v5.3.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@3fa32b8bb5620a2c1afe798654bbad59f9da4906 # v4.4.0
        with:
          args: release --clean
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
