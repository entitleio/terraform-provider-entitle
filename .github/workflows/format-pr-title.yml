permissions:
  pull-requests: write
  issues: write
name: Format PR Title

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  format-title:
    runs-on: ubuntu-latest
    steps:
      - name: Parse PR body
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = context.payload.pull_request.body || "";
            const jiraMatch = body.match(/^### Jira Ticket\s*([\w-]+)/m);
            const typeMatch = body.match(/^### Type\s*(\w+)/m);
            const titleMatch = body.match(/^### Title\s*(.+)/m);

            const JIRA = jiraMatch ? jiraMatch[1].toUpperCase() : "";
            const TYPE = typeMatch ? typeMatch[1].toLowerCase() : "feat";
            const TITLE = titleMatch ? titleMatch[1].trim() : "";

            core.setOutput("JIRA", JIRA);
            core.setOutput("TYPE", TYPE);
            core.setOutput("TITLE", TITLE);

      - name: Update PR title
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { JIRA, TYPE, TITLE } = core.getInput("JIRA") ? { 
              JIRA: core.getInput("JIRA"), 
              TYPE: core.getInput("TYPE"), 
              TITLE: core.getInput("TITLE") 
            } : process.env;

            const newTitle = `${TYPE}(${JIRA}): ${TITLE}`;
            console.log("‚úÖ Updating PR title to:", newTitle);

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              title: newTitle
            });

      - name: Add label based on Type
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const TYPE = core.getInput("TYPE") || "feat";
            
            let label;
            switch (TYPE) {
              case "feat":
                label = "enhancement";
                break;
              case "bug":
                label = "bug";
                break;
              case "docs":
                label = "documentation";
                break;
              default:
                label = "enhancement";
            }
            
            console.log(`üè∑Ô∏è Adding label: ${label}`);
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: [label],
            });