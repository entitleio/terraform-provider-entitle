# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  workflow_call:
    secrets:
      ENTITLE_API_KEY:
        required: true
      ENTITLE_OWNER_EMAIL:
        required: true
      ENTITLE_OWNER_ID:
        required: true
      ENTITLE_WORKFLOW_ID:
        required: true
      ENTITLE_USER1_ID:
        required: true
      ENTITLE_USER2_ID:
        required: true
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'examples/**'
  schedule:
    - cron: '0 2 * * *' # Every day at 02:00 UTC

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.4.*' # Intermediate
          - '1.12.*' # Latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.6.*' # Intermediate
          - '1.12.*' # Latest
    steps:
      - run: sleep 30
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          ENTITLE_API_KEY: ${{ secrets.ENTITLE_API_KEY }}
          ENTITLE_OWNER_EMAIL: ${{ secrets.ENTITLE_OWNER_EMAIL }}
          ENTITLE_OWNER_ID: ${{ secrets.ENTITLE_OWNER_ID }}
          ENTITLE_WORKFLOW_ID: ${{ secrets.ENTITLE_WORKFLOW_ID }}
          ENTITLE_USER1_ID: ${{ secrets.ENTITLE_USER1_ID }}
          ENTITLE_USER2_ID: ${{ secrets.ENTITLE_USER2_ID }}
        run: go test -v -cover -tags=acceptance ./internal/provider/...
        timeout-minutes: 10
